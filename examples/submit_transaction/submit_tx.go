package main

import (
	"context"
	"log"

	"github.com/rs/zerolog"

	"github.com/bitcoin-sv/go-broadcast-client/broadcast"
	broadcast_client "github.com/bitcoin-sv/go-broadcast-client/broadcast/broadcast-client"
)

// This example shows how to submit a transaction.
func main() {
	logger := zerolog.Nop()
	token := ""
	apiURL := "https://arc.gorillapool.io"
	tx := broadcast.Transaction{Hex: "0100000001ddb4c9848bdb3815df8615fa292cbd78d08df8ddcca030952893cd5323cde2d6070000006a4730440220217a28cce8e91a6aed468f55a3ff370b659243a1426bac54e969ee0bac66917702201e4325624ed092a72fe4bfdf7ab73c63b54d02ebfc2c281fe6b168aead3b81bf412102297bd70ae25fb4a13b4ce619dfa7c01711d7999a7ffa027869df61758a8128d1ffffffff08f4010000000000001976a914c762c78bc4166f1d612f444759690bd54543cd8788acf4010000000000001976a914cfb15128b34f29c0fef7281664f15f9e9b86b2c888acf4010000000000001976a9140c5a3b6a60c6e1eeb787ede1a03ae118ae3c437688ac88130000000000001976a914e4d0bd8a51c7524b895e00561310e51baa10c66c88acf4010000000000001976a914848b33504640a85cc8884144b656f92e704a253c88acf4010000000000001976a914e1d4a53aa9f3d11c7b5d1b532266b34d6a34181288ac0000000000000000fd2401006a22314d6a4a7251744a735959647a753254487872654e69524c53586548637a417778550a5361746f73656e6465720a746578742f706c61696e057574662d38017c223150755161374b36324d694b43747373534c4b79316b683536575755374d7455523503534554036170700a7361746f73656e64657204747970650c7265676973746572557365720c7061796d61696c204861736840373863613031353837646635373533323265623538386233623830623433313239633763636435383266343361303662623538363133353233323737613663340970686f6e65486173684039643535626465323661613139343364326234366463303665343735356139363536666564323062626632643839313138353339346139623431633034643539d3830700000000001976a91467ef6a452137dc349cf28ffe6893f782a704560388ac00000000"}

	cfg := broadcast_client.ArcClientConfig{
		Token:  token,
		APIUrl: apiURL,
	}

	client := broadcast_client.Builder().
		WithArc(cfg, &logger).
		Build()

	result, err := client.SubmitTransaction(context.Background(), &tx, broadcast.WithRawFormat())
	if err != nil {
		log.Fatalf("error: %s", err.Error())
	}

	broadcast.PrettyPrint("Result: ", result)
}
